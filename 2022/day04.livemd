# Day 04

```elixir
Mix.install([
  {:kino, "~> 0.7.0"}
])
```

## Input

<!-- livebook:{"reevaluate_automatically":true} -->

```elixir
input = Kino.Input.textarea("input")
```

## Shared

```elixir
defmodule Utils do
  def parse(line) do
    [min1, max1, min2, max2] =
      line
      |> String.split([",", "-"])
      |> Enum.map(&String.to_integer/1)

    [{min1, max1}, {min2, max2}]
    |> Enum.sort()
  end

  def overlap1?([{min1, max1}, {min2, max2}]) when min2 >= min1 and max2 <= max1, do: true
  def overlap1?([{min1, max1}, {min2, max2}]) when min1 >= min2 and max1 <= max2, do: true
  def overlap1?(_), do: false

  def overlap2?([{_min1, max1}, {min2, _max2}]) when min2 <= max1, do: true
  def overlap2?(_), do: false
end
```

## Part 01

```elixir
input
|> Kino.Input.read()
|> String.split("\n")
|> Enum.filter(fn line ->
  line
  |> Utils.parse()
  |> Utils.overlap1?()
end)
|> Enum.count()
```

## Part 02

```elixir
input
|> Kino.Input.read()
|> String.split("\n")
|> Enum.filter(fn line ->
  line
  |> Utils.parse()
  |> Utils.overlap2?()
end)
|> Enum.count()
```
